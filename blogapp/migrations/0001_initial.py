# Generated by Django 5.2.6 on 2025-09-15 16:45

import ckeditor_uploader.fields
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(default='fas fa-folder', max_length=50, verbose_name='Icône')),
                ('color', models.CharField(default='#2563eb', max_length=7, verbose_name='Couleur')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField(verbose_name='Description')),
                ('project_type', models.CharField(choices=[('web', 'Développement Web'), ('robotics', 'Robotique'), ('iot', 'Internet des Objets'), ('ai', 'Intelligence Artificielle'), ('mobile', 'Application Mobile'), ('desktop', 'Application Desktop'), ('other', 'Autre')], default='web', max_length=20, verbose_name='Type de projet')),
                ('status', models.CharField(choices=[('planning', 'En planification'), ('development', 'En développement'), ('testing', 'En test'), ('completed', 'Terminé'), ('maintenance', 'En maintenance')], default='planning', max_length=20, verbose_name='Statut')),
                ('github_url', models.URLField(blank=True, verbose_name='Lien GitHub')),
                ('demo_url', models.URLField(blank=True, verbose_name='Lien démo')),
                ('documentation_url', models.URLField(blank=True, verbose_name='Documentation')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='projects/images/', verbose_name='Image principale')),
                ('technologies', models.CharField(help_text='Séparez les technologies par des virgules', max_length=500, verbose_name='Technologies utilisées')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Projet mis en avant')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('excerpt', models.TextField(max_length=300, verbose_name='Extrait')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Contenu')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='posts/images/', verbose_name='Image mise en avant')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Débutant'), ('intermediate', 'Intermédiaire'), ('advanced', 'Avancé'), ('expert', 'Expert')], default='beginner', max_length=12, verbose_name='Niveau de difficulté')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('pending', 'En attente'), ('published', 'Publié')], default='draft', max_length=10, verbose_name='Statut')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Vues')),
                ('reading_time', models.PositiveIntegerField(default=5, verbose_name='Temps de lecture (min)')),
                ('version', models.PositiveIntegerField(default=1, verbose_name='Version')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Publié le')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='blogapp.category')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.post', verbose_name='Version précédente')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Commentaire')),
                ('is_approved', models.BooleanField(default=True, verbose_name='Approuvé')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blogapp.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blogapp.post')),
            ],
            options={
                'verbose_name': 'Commentaire',
                'verbose_name_plural': 'Commentaires',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biographie')),
                ('avatar', models.ImageField(default='avatars/default.jpg', upload_to='avatars/', verbose_name='Photo de profil')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('github_url', models.URLField(blank=True, verbose_name='GitHub')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Notifications par email')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='PostRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='blogapp.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'unique_together': {('post', 'user')},
            },
        ),
    ]
